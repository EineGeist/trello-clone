{"version":3,"sources":["utils/index.ts","utils/lib.ts","utils/constants.ts","utils/hooks.ts","localization/types.ts","localization/data/index.ts","shared/Button/Button.tsx","shared/TextArea/TextArea.tsx","shared/FieldEditor/FieldEditor.tsx","shared/Toggle/Toggle.tsx","shared/Select/Select.tsx","themes/types.ts","localization/actions.ts","app/Header/Menu/LanguageSelect.tsx","lists/types.ts","themes/actions.ts","app/Header/Menu/ThemeToggle.tsx","app/Header/Menu/Options.tsx","app/Header/Menu/Menu.tsx","app/Header/Header.tsx","app/PhotoSignature/PhotoSignature.tsx","app/views/NotFoundPage/NotFoundPage.tsx","app/views/HomePage/HomePage.tsx","boards/types.ts","lists/actions.ts","cards/types.ts","boards/actions.ts","cards/actions.ts","cards/components/Card.tsx","cards/components/NewCard.tsx","cards/components/ListOfCards.tsx","lists/components/List.tsx","lists/components/NewList.tsx","lists/components/ListOfLists.tsx","app/views/BoardPage/BoardPage.tsx","boards/components/BoardLink.tsx","boards/components/NewBoard.tsx","boards/components/BoardsNavigation.tsx","app/App.tsx","app/localStorage.ts","localization/reducer.ts","themes/reducer.ts","boards/reducer.ts","lists/reducer.ts","cards/reducer.ts","app/rootReducer.ts","app/store.ts","index.tsx"],"names":["preventDefault","e","closestByReference","element","reference","currentElement","check","Array","isArray","current","some","referenceArrayItem","parentElement","parentNode","nodeType","countChildrenHeight","parent","n","children","contentHeight","length","scrollHeight","i","child","HTMLElement","offsetHeight","removeLineBreaks","value","replace","HORIZONTAL_SCROLLING_SPEED_FACTOR","useStateWithCallback","initialState","callback","useState","state","setState","useSwitch","useSwitchWithCallback","useToggle","useCallbackOnExternalAction","elements","condition","useLayoutEffect","clearedArray","reduce","arr","push","handler","target","document","addEventListener","removeEventListener","LocaleActionTypes","translations","en","name","translation","ru","Button","forwardRef","ref","className","derivedClassName","styleType","attributes","TextArea","labelValue","isInvalid","containerClassName","hideLabel","setHideLabel","useEffect","textAreaProps","spellCheck","TextareaAutosize","FieldEditor","fieldName","displayOnViewMode","titles","initialEditMode","onEditToggle","iconToggle","exitOnSubmit","onSubmit","onDelete","textareaClassName","textareaContainerClassName","intl","useIntl","textAreaRef","useRef","formRef","editMode","enterEditMode","exitEditMode","currentValue","setCurrentValue","trim","handleSubmit","trimmedCurrentValue","focus","editTitle","edit","formatMessage","id","submitTitle","submit","cancelTitle","cancel","deleteTitle","delete","title","undefined","rowsMax","disabled","required","onChange","onKeyDown","key","onClick","fontSize","Toggle","sliderClassName","type","Select","options","display","maxDisplayOptions","derivedContainerClassName","selectClassName","optionsClassName","optionClassName","labelRef","selectAttributes","containerRef","optionsRef","expand","enableExpand","disableExpand","style","height","toDisplay","find","option","content","handleChange","newValue","optionTabIndex","event","tabIndex","map","onOptionKeyDown","SET_LANGUAGE","ThemeActionTypes","LanguageSelect","dispatch","useDispatch","language","useSelector","locale","languageCode","payload","code","languageName","currentLanguage","setCurrentLanguage","Object","entries","TOGGLE_THEME","ListActionTypes","ThemeToggle","currentTheme","theme","checked","Options","languageSelectLabelRef","defaultMessage","htmlFor","Menu","menuRef","toggleExpand","Header","to","exact","PhotoSignature","themeData","data","href","bgAuthorLink","rel","bgAuthor","bgSourceLink","bgSource","NotFoundPage","message","history","useHistory","goBack","HomePage","CREATE_LIST","DELETE_LIST","CHANGE_LIST","MOVE_CARD","BoardActionTypes","CREATE_BOARD","CHANGE_BOARD","DELETE_BOARD","MOVE_LIST","CardActionTypes","CREATE_CARD","DELETE_CARD","CHANGE_CARD","memo","index","onEdit","cards","handleDelete","newContent","shouldDrag","toggleShouldDrag","draggableId","disableInteractiveElementBlocking","provided","draggableProps","dragHandleProps","innerRef","position","createPortal","getElementById","onCreate","toggleListDrag","listId","cardsIds","lists","useCallback","cardId","v4","createCard","deleteCard","changeCard","droppableId","droppableProps","placeholder","newTitle","boardId","boards","byId","createList","getState","deleteList","changeList","onListMove","fromIndex","toIndex","moveList","onCardMove","fromListId","toListId","moveCard","onDragEnd","result","destination","source","direction","BoardPage","match","params","onWheel","currentTarget","deltaY","window","innerHeight","closest","scrollTo","left","scrollLeft","toggleEditMode","BoardsNavigation","boardsIds","allIds","createBoard","location","pathname","includes","listsIds","flat","deleteBoard","changeBoard","PageNotFound","App","messages","path","component","render","saveState","serializedState","JSON","stringify","store","localStorage","setItem","err","watchState","throttle","subscribe","preferredLanguage","navigator","slice","localeReducer","themesData","light","themeReducer","newTheme","boardReducer","filter","board","list","splice","targetListId","listReducer","rest","newState","fromList","card","toList","prop","hasOwnProperty","combineReducers","cardReducer","middleware","ReduxThunk","createStore","rootReducer","getItem","parse","loadState","composeWithDevTools","applyMiddleware","ReactDOM","basename","process"],"mappings":"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","file":"static/js/main.d81776f9.chunk.js","sourcesContent":["export * from './types';\r\nexport * from './constants';\r\nexport * from './lib';\r\nexport * from './hooks';\r\n","import { SyntheticEvent } from 'react';\r\n\r\nexport const preventDefault = (e: Event | SyntheticEvent) => e.preventDefault();\r\n\r\nexport const cloneDeep = <T extends {} | []>(structure: T): T =>\r\n  JSON.parse(JSON.stringify(structure));\r\n\r\nexport const closestByReference = (\r\n  element: HTMLElement,\r\n  reference: HTMLElement | HTMLElement[]\r\n) => {\r\n  let currentElement: HTMLElement | Node | null = element;\r\n  const isArray = Array.isArray(reference);\r\n\r\n  const check: (current: HTMLElement | Node) => boolean = isArray\r\n    ? current =>\r\n        (reference as HTMLElement[]).some(\r\n          referenceArrayItem => current === referenceArrayItem\r\n        )\r\n    : current => current === reference;\r\n\r\n  do {\r\n    if (check(currentElement)) return currentElement;\r\n\r\n    currentElement = currentElement.parentElement || currentElement.parentNode;\r\n  } while (currentElement !== null && currentElement.nodeType === 1);\r\n\r\n  return null;\r\n};\r\n\r\nexport const countChildrenHeight = (\r\n  parent: HTMLElement,\r\n  n: number | 'all'\r\n): string => {\r\n  const children = parent.children;\r\n  let contentHeight = 0;\r\n\r\n  if (n === 'all' || children.length < n) {\r\n    contentHeight = parent.scrollHeight;\r\n  } else {\r\n    for (let i = 0; i < children.length && i < n; i++) {\r\n      const child = children[i];\r\n      if (child instanceof HTMLElement) contentHeight += child.offsetHeight;\r\n    }\r\n  }\r\n\r\n  return contentHeight + 'px';\r\n};\r\n\r\nexport const removeLineBreaks = (value: string) =>\r\n  value.replace(/\\r\\n|\\r|\\n/gm, ' ');\r\n","export const HORIZONTAL_SCROLLING_SPEED_FACTOR = 0.75;\r\n","import { useState, useLayoutEffect } from 'react';\r\nimport { closestByReference } from './lib';\r\n\r\nexport const useStateWithCallback = <S>(\r\n  initialState: S,\r\n  callback?: (state: S) => any\r\n): [S, (value: S) => void] => {\r\n  const [state, setState] = useState(initialState);\r\n  return [\r\n    state,\r\n    value => {\r\n      if (callback) callback(value);\r\n      setState(value);\r\n    },\r\n  ];\r\n};\r\n\r\nexport const useSwitch = (\r\n  initialState: boolean\r\n): [boolean, () => void, () => void] => {\r\n  const [state, setState] = useState(initialState);\r\n  const enable = () => setState(true);\r\n  const disable = () => setState(false);\r\n  return [state, enable, disable];\r\n};\r\n\r\nexport const useSwitchWithCallback = (\r\n  initialState: boolean,\r\n  callback?: (state: boolean) => any\r\n): [boolean, () => void, () => void] => {\r\n  const [state, setState] = useStateWithCallback(initialState, callback);\r\n  const enable = () => setState(true);\r\n  const disable = () => setState(false);\r\n  return [state, enable, disable];\r\n};\r\n\r\nexport const useToggle = (initialState: boolean): [boolean, () => void] => {\r\n  const [state, setState] = useState(initialState);\r\n  const toggleState = () => setState(!state);\r\n  return [state, toggleState];\r\n};\r\n\r\nexport type ElementType = HTMLElement | null | undefined;\r\n\r\nexport const useCallbackOnExternalAction = (\r\n  elements: ElementType | ElementType[],\r\n  callback: () => any,\r\n  condition?: boolean\r\n) => {\r\n  useLayoutEffect(() => {\r\n    if (!condition || !elements) return;\r\n\r\n    const clearedArray = Array.isArray(elements)\r\n      ? elements.reduce<HTMLElement[]>((arr, element) => {\r\n          if (element) arr.push(element);\r\n          return arr;\r\n        }, [])\r\n      : elements;\r\n\r\n    const handler = ({ target }: Event) => {\r\n      if (!closestByReference(target as HTMLElement, clearedArray)) callback();\r\n    };\r\n\r\n    document.addEventListener('click', handler);\r\n    document.addEventListener('focusin', handler);\r\n    return () => {\r\n      document.removeEventListener('click', handler);\r\n      document.removeEventListener('focusin', handler);\r\n    };\r\n  }, [elements, callback, condition]);\r\n};\r\n","import translations from './data';\r\n\r\nexport type AvailableLanguages = keyof typeof translations;\r\n\r\nexport type EnTranslationId = keyof typeof translations['en']['translation'];\r\n\r\nexport enum LocaleActionTypes {\r\n  SET_LANGUAGE = 'SET_LANGUAGE',\r\n}\r\nconst { SET_LANGUAGE } = LocaleActionTypes;\r\n\r\nexport interface SetLanguageAction {\r\n  type: typeof SET_LANGUAGE;\r\n  payload: {\r\n    languageCode: string;\r\n    languageName: string;\r\n  };\r\n}\r\n\r\nexport type LocaleActions = SetLanguageAction;\r\n\r\nexport interface LocaleState {\r\n  languageCode: string;\r\n  languageName: string;\r\n}\r\n","import englishTranslation from './en.json';\r\nimport russianTranslation from './ru.json';\r\n\r\ninterface Translations {\r\n  [prop: string]: {\r\n    name: string;\r\n    translation: {\r\n      [prop: string]: string;\r\n    };\r\n  };\r\n}\r\n\r\nconst translations: Translations = {\r\n  en: {\r\n    name: 'english',\r\n    translation: englishTranslation,\r\n  },\r\n  ru: {\r\n    name: 'русский',\r\n    translation: russianTranslation,\r\n  },\r\n};\r\n\r\nexport default translations;\r\n","import React, { forwardRef, ComponentProps } from 'react';\r\nimport './Button.scss';\r\n\r\nexport interface ButtonProps extends ComponentProps<'button'> {\r\n  styleType?: 'accent' | 'plain';\r\n}\r\n\r\nexport const Button = forwardRef<HTMLButtonElement, ButtonProps>(\r\n  (\r\n    { className: derivedClassName = '', styleType = '', ...attributes },\r\n    ref\r\n  ) => {\r\n    let className = 'button';\r\n    if (styleType) className += '--' + styleType;\r\n    if (derivedClassName) className += ' ' + derivedClassName;\r\n    return <button className={className} {...attributes} ref={ref} />;\r\n  }\r\n);\r\n","import React, { useState, forwardRef, useEffect } from 'react';\r\nimport { TextareaAutosize, TextareaAutosizeProps } from '@material-ui/core';\r\nimport './TextArea.scss';\r\n\r\nexport interface TextAreaProps extends TextareaAutosizeProps {\r\n  labelValue?: string;\r\n  isInvalid?: boolean;\r\n  containerClassName?: string;\r\n}\r\n\r\nexport const TextArea = forwardRef<HTMLTextAreaElement, TextAreaProps>(\r\n  (\r\n    {\r\n      labelValue = false,\r\n      isInvalid = false,\r\n      containerClassName = '',\r\n      className: derivedClassName = '',\r\n      value,\r\n      ...attributes\r\n    },\r\n    ref\r\n  ) => {\r\n    const [hideLabel, setHideLabel] = useState(!!value);\r\n\r\n    useEffect(() => {\r\n      setHideLabel(!!value);\r\n    }, [value]);\r\n\r\n    const textAreaProps = {\r\n      className: `textarea__textarea${\r\n        isInvalid ? '--invalid' : ''\r\n      } ${derivedClassName}`,\r\n      spellCheck: false,\r\n      value,\r\n      ...attributes,\r\n      ref,\r\n    };\r\n\r\n    return (\r\n      <div className={`textarea__container ${containerClassName}`}>\r\n        {labelValue ? (\r\n          <label className=\"textarea__label\">\r\n            <span\r\n              className={`textarea__label-value${hideLabel ? '--hide' : ''}`}\r\n            >\r\n              {labelValue}\r\n            </span>\r\n            <TextareaAutosize {...textAreaProps} ref={ref} />\r\n          </label>\r\n        ) : (\r\n          <TextareaAutosize {...textAreaProps} ref={ref} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n","import React, {\r\n  FC,\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n  ChangeEvent,\r\n  KeyboardEvent,\r\n} from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport {\r\n  preventDefault,\r\n  useCallbackOnExternalAction,\r\n  removeLineBreaks,\r\n  useSwitchWithCallback,\r\n  AnyFunction,\r\n} from 'utils';\r\nimport { Button, TextArea } from 'shared';\r\nimport {\r\n  EditOutlined as EditIcon,\r\n  DeleteOutlineRounded as DeleteIcon,\r\n  DoneRounded as SubmitIcon,\r\n  CloseRounded as CancelIcon,\r\n} from '@material-ui/icons';\r\nimport './FieldEditor.scss';\r\n\r\ninterface Titles {\r\n  submit?: string;\r\n  cancel?: string;\r\n  delete?: string;\r\n  edit?: string;\r\n}\r\n\r\nexport interface FieldEditorProps {\r\n  className?: string;\r\n  fieldName: string;\r\n  value?: string;\r\n  displayOnViewMode?: string;\r\n  titles?: Titles;\r\n  initialEditMode?: boolean;\r\n  onEditToggle?: AnyFunction;\r\n  iconToggle?: boolean;\r\n  exitOnSubmit?: boolean;\r\n  onSubmit: AnyFunction;\r\n  onDelete?: AnyFunction;\r\n  textareaClassName?: string;\r\n  textareaContainerClassName?: string;\r\n}\r\n\r\nexport const FieldEditor: FC<FieldEditorProps> = ({\r\n  className = '',\r\n  fieldName,\r\n  value = '',\r\n  displayOnViewMode,\r\n  titles,\r\n  initialEditMode = false,\r\n  onEditToggle,\r\n  iconToggle = false,\r\n  exitOnSubmit = true,\r\n  onSubmit,\r\n  onDelete,\r\n  textareaClassName,\r\n  textareaContainerClassName,\r\n}) => {\r\n  const intl = useIntl();\r\n  const textAreaRef = useRef<HTMLTextAreaElement>(null);\r\n  const formRef = useRef<HTMLDivElement>(null);\r\n\r\n  const [editMode, enterEditMode, exitEditMode] = useSwitchWithCallback(\r\n    initialEditMode,\r\n    onEditToggle\r\n  );\r\n  const [currentValue, setCurrentValue] = useState(value);\r\n\r\n  const handleChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n    setCurrentValue(removeLineBreaks(e.target.value));\r\n  };\r\n  const isInvalid = !currentValue.trim();\r\n\r\n  const handleSubmit = () => {\r\n    if (isInvalid) return;\r\n\r\n    const trimmedCurrentValue = currentValue.trim();\r\n    if (value !== trimmedCurrentValue) {\r\n      onSubmit(trimmedCurrentValue);\r\n    }\r\n\r\n    if (exitOnSubmit) exitEditMode();\r\n    else setCurrentValue('');\r\n  };\r\n\r\n  const handleKeyDown = (e: KeyboardEvent<HTMLTextAreaElement>) => {\r\n    if (e.key === 'Escape') exitEditMode();\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault();\r\n      handleSubmit();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (editMode) textAreaRef.current?.focus();\r\n  }, [editMode]);\r\n\r\n  useEffect(() => {\r\n    setCurrentValue(value);\r\n  }, [value, editMode]);\r\n\r\n  useCallbackOnExternalAction(formRef.current, exitEditMode, editMode);\r\n\r\n  const editTitle = titles?.edit || intl.formatMessage({ id: 'edit' });\r\n  const submitTitle = titles?.submit || intl.formatMessage({ id: 'submit' });\r\n  const cancelTitle = titles?.cancel || intl.formatMessage({ id: 'cancel' });\r\n  const deleteTitle = titles?.delete || intl.formatMessage({ id: 'delete' });\r\n\r\n  return (\r\n    <div\r\n      className={`field-editor${editMode ? '--edit' : ''} ${className}`}\r\n      ref={formRef}\r\n    >\r\n      <div className=\"field-editor__textarea-container\">\r\n        <TextArea\r\n          containerClassName={textareaContainerClassName}\r\n          className={textareaClassName}\r\n          labelValue={fieldName}\r\n          title={editMode ? fieldName : undefined}\r\n          isInvalid={isInvalid}\r\n          value={\r\n            displayOnViewMode && !editMode ? displayOnViewMode : currentValue\r\n          }\r\n          rowsMax={3}\r\n          disabled={!editMode}\r\n          required={true}\r\n          onChange={handleChange}\r\n          onKeyDown={handleKeyDown}\r\n          ref={textAreaRef}\r\n        />\r\n        <div className=\"default-prevention-boundary\" onClick={preventDefault}>\r\n          {!editMode &&\r\n            (iconToggle ? (\r\n              <Button\r\n                styleType=\"plain\"\r\n                className=\"field-editor__button-edit\"\r\n                title={editTitle}\r\n                onClick={enterEditMode}\r\n              >\r\n                <EditIcon fontSize=\"inherit\" />\r\n              </Button>\r\n            ) : (\r\n              // disabled textarea ignores clicks\r\n              <button\r\n                className=\"field-editor__click-overlay\"\r\n                title={editTitle}\r\n                onClick={enterEditMode}\r\n              />\r\n            ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"field-editor__buttons-container\">\r\n        {editMode && (\r\n          <>\r\n            <div>\r\n              <Button\r\n                styleType=\"plain\"\r\n                className=\"field-editor__button-submit\"\r\n                title={submitTitle}\r\n                onClick={handleSubmit}\r\n                disabled={isInvalid}\r\n              >\r\n                <SubmitIcon fontSize=\"inherit\" />\r\n              </Button>\r\n              <Button\r\n                styleType=\"plain\"\r\n                className=\"field-editor__button\"\r\n                title={cancelTitle}\r\n                onClick={exitEditMode}\r\n              >\r\n                <CancelIcon fontSize=\"inherit\" />\r\n              </Button>\r\n            </div>\r\n            {onDelete && (\r\n              <Button\r\n                styleType=\"plain\"\r\n                className=\"field-editor__button\"\r\n                title={deleteTitle}\r\n                onClick={onDelete}\r\n              >\r\n                <DeleteIcon fontSize=\"inherit\" />\r\n              </Button>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC, ComponentProps } from 'react';\r\nimport './Toggle.scss';\r\n\r\nexport interface ToggleProps extends ComponentProps<'input'> {\r\n  containerClassName?: string;\r\n  sliderClassName?: string;\r\n}\r\n\r\nexport const Toggle: FC<ToggleProps> = ({\r\n  containerClassName,\r\n  sliderClassName,\r\n  ...attributes\r\n}) => {\r\n  return (\r\n    <div\r\n      className={`toggle${containerClassName ? ' ' + containerClassName : ''}`}\r\n    >\r\n      <input {...attributes} className=\"toggle__chackbox\" type=\"checkbox\" />\r\n      <div\r\n        className={`toggle__slider${\r\n          sliderClassName ? ' ' + sliderClassName : ''\r\n        }`}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, {\r\n  FC,\r\n  useRef,\r\n  KeyboardEvent,\r\n  ComponentProps,\r\n  RefObject,\r\n  MouseEvent,\r\n  useLayoutEffect,\r\n} from 'react';\r\nimport { ArrowDropDown as ArrowIcon } from '@material-ui/icons';\r\nimport './Select.scss';\r\nimport {\r\n  useCallbackOnExternalAction,\r\n  AnyFunction,\r\n  useSwitch,\r\n  countChildrenHeight,\r\n} from 'utils';\r\n\r\nexport type OptionValue = string | number;\r\nexport type Content = string | number;\r\n\r\nexport interface Option {\r\n  value: OptionValue;\r\n  content?: Content;\r\n}\r\n\r\nexport interface SelectProps extends ComponentProps<'select'> {\r\n  options: Option[];\r\n  value?: OptionValue;\r\n  onChange: AnyFunction;\r\n  display?: Content;\r\n  maxDisplayOptions?: number | 'all';\r\n  containerClassName?: string;\r\n  selectClassName?: string;\r\n  optionsClassName?: string;\r\n  optionClassName?: string;\r\n  labelRef?: RefObject<HTMLLabelElement | null>;\r\n  styles?: void;\r\n}\r\n\r\nexport const Select: FC<SelectProps> = ({\r\n  options,\r\n  value,\r\n  onChange,\r\n  display,\r\n  maxDisplayOptions = 5,\r\n  containerClassName: derivedContainerClassName,\r\n  selectClassName,\r\n  optionsClassName,\r\n  optionClassName,\r\n  labelRef,\r\n  onClick,\r\n  ...selectAttributes\r\n}) => {\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const optionsRef = useRef<HTMLUListElement>(null);\r\n  const [expand, enableExpand, disableExpand] = useSwitch(false);\r\n\r\n  useLayoutEffect(() => {\r\n    if (!optionsRef.current) return;\r\n    if (!expand) {\r\n      optionsRef.current.style.height = '0px';\r\n      return;\r\n    }\r\n\r\n    optionsRef.current.style.height = countChildrenHeight(\r\n      optionsRef.current,\r\n      maxDisplayOptions\r\n    );\r\n  });\r\n\r\n  useCallbackOnExternalAction(\r\n    [containerRef.current, labelRef?.current],\r\n    disableExpand,\r\n    expand\r\n  );\r\n\r\n  const toDisplay =\r\n    display ||\r\n    options.find(option => option.value === value)?.content ||\r\n    value ||\r\n    '';\r\n\r\n  let containerClassName = 'select';\r\n  if (expand) containerClassName += '--expand';\r\n  if (derivedContainerClassName)\r\n    containerClassName += ' ' + derivedContainerClassName;\r\n\r\n  const handleChange = (newValue: OptionValue) => {\r\n    if (value === newValue) return;\r\n    onChange(newValue);\r\n    disableExpand();\r\n  };\r\n\r\n  const onOptionKeyDown = (\r\n    { key }: KeyboardEvent<HTMLLIElement>,\r\n    value: OptionValue\r\n  ) => {\r\n    if (key !== 'Enter') return;\r\n    handleChange(value);\r\n  };\r\n\r\n  const onSelectKeyDown = ({ key }: KeyboardEvent<HTMLDivElement>) => {\r\n    if (!expand && (key === 'Enter' || key === ' ')) {\r\n      enableExpand();\r\n    } else if (expand && key === 'Escape') {\r\n      disableExpand();\r\n    }\r\n  };\r\n\r\n  const onSelectClick = (event: MouseEvent<any>) => {\r\n    // prevent label click if it's exist\r\n    event.preventDefault();\r\n\r\n    if (expand) disableExpand();\r\n    else enableExpand();\r\n\r\n    if (onClick) onClick(event);\r\n  };\r\n\r\n  const optionTabIndex = expand ? 0 : -1;\r\n\r\n  return (\r\n    <div\r\n      className={containerClassName}\r\n      onKeyDown={onSelectKeyDown}\r\n      ref={containerRef}\r\n      onClick={onSelectClick}\r\n    >\r\n      <select className=\"select__native-select\" {...selectAttributes} />\r\n      <div\r\n        className={`select__select${\r\n          selectClassName ? ' ' + selectClassName : ''\r\n        }`}\r\n        tabIndex={0}\r\n      >\r\n        <div className=\"select__arrow-container\">\r\n          <ArrowIcon className=\"select__arrow\" />\r\n        </div>\r\n        <span className=\"select__display\">{toDisplay}</span>\r\n        <div className=\"select__options-container\">\r\n          <ul\r\n            className={`select__options${\r\n              optionsClassName ? ' ' + optionsClassName : ''\r\n            }`}\r\n            ref={optionsRef}\r\n          >\r\n            {options.map(({ value, content }) => (\r\n              <li\r\n                className={`select__option${\r\n                  optionClassName ? ' ' + optionClassName : ''\r\n                }`}\r\n                key={value}\r\n                onClick={() => handleChange(value)}\r\n                onKeyDown={e => onOptionKeyDown(e, value)}\r\n                tabIndex={optionTabIndex}\r\n              >\r\n                {content || value}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import themesData from './themesData.json';\r\n\r\nexport enum ThemeActionTypes {\r\n  TOGGLE_THEME = 'TOGGLE_THEME',\r\n}\r\n\r\nconst { TOGGLE_THEME } = ThemeActionTypes;\r\n\r\nexport interface ToggleThemeAction {\r\n  type: typeof TOGGLE_THEME;\r\n}\r\n\r\nexport type ThemeActions = ToggleThemeAction;\r\n\r\nexport interface ThemeState {\r\n  theme: keyof typeof themesData;\r\n  data: {\r\n    bgAuthor: string;\r\n    bgAuthorLink: string;\r\n    bgSource: string;\r\n    bgSourceLink: string;\r\n  };\r\n}\r\n","import translations from './data';\r\nimport { LocaleActionTypes, SetLanguageAction } from './types';\r\nconst { SET_LANGUAGE } = LocaleActionTypes;\r\n\r\nexport type SetLanguageActionCreator = (code: string) => SetLanguageAction;\r\n\r\nexport const setLanguage: SetLanguageActionCreator = code => ({\r\n  type: SET_LANGUAGE,\r\n  payload: { languageCode: code, languageName: translations[code].name },\r\n});\r\n","import React, { FC, RefObject } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useStateWithCallback } from 'utils';\r\nimport { Select, Option } from 'shared';\r\nimport { AppState } from 'app/types';\r\nimport { setLanguage } from 'localization/actions';\r\nimport translations from 'localization/data';\r\n\r\nexport interface LanguageSelectProps {\r\n  id?: string;\r\n  labelRef?: RefObject<HTMLLabelElement | null>;\r\n}\r\n\r\nconst LanguageSelect: FC<LanguageSelectProps> = ({ id, labelRef }) => {\r\n  const dispatch = useDispatch();\r\n  const language = useSelector<AppState, string>(\r\n    state => state.locale.languageCode\r\n  );\r\n  const [currentLanguage, setCurrentLanguage] = useStateWithCallback<string>(\r\n    language,\r\n    state => dispatch(setLanguage(state))\r\n  );\r\n\r\n  const onChange = (value: string) => {\r\n    setCurrentLanguage(value);\r\n  };\r\n\r\n  const options: Option[] = Object.entries(translations).map(\r\n    ([code, data]) => ({\r\n      value: code,\r\n      content: data.name,\r\n    })\r\n  );\r\n\r\n  return (\r\n    <Select\r\n      id={id}\r\n      containerClassName=\"site-menu__language-select\"\r\n      labelRef={labelRef}\r\n      value={currentLanguage}\r\n      onChange={onChange}\r\n      options={options}\r\n    />\r\n  );\r\n};\r\n\r\nexport default LanguageSelect;\r\n","import { ActionCreator } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { AppState } from 'app/types';\r\n\r\nexport enum ListActionTypes {\r\n  CREATE_LIST = 'CREATE_LIST',\r\n  DELETE_LIST = 'DELETE_LIST',\r\n  CHANGE_LIST = 'CHANGE_LIST',\r\n  MOVE_CARD = 'MOVE_CARD',\r\n}\r\nconst { CREATE_LIST, DELETE_LIST, CHANGE_LIST, MOVE_CARD } = ListActionTypes;\r\n\r\nexport interface CreateListAction {\r\n  type: typeof CREATE_LIST;\r\n  payload: {\r\n    boardId: string;\r\n    listId: string;\r\n    title: string;\r\n  };\r\n}\r\n\r\nexport interface DeleteListAction {\r\n  type: typeof DELETE_LIST;\r\n  payload: {\r\n    boardId: string;\r\n    listId: string;\r\n    cardsIds: string[];\r\n  };\r\n}\r\n\r\nexport type DeleteListThunk = ActionCreator<\r\n  ThunkAction<DeleteListAction, AppState, void, DeleteListAction>\r\n>;\r\n\r\nexport interface ChangeListAction {\r\n  type: typeof CHANGE_LIST;\r\n  payload: {\r\n    listId: string;\r\n    title: string;\r\n  };\r\n}\r\n\r\nexport interface MoveCardAction {\r\n  type: typeof MOVE_CARD;\r\n  payload: {\r\n    fromListId: string;\r\n    toListId: string;\r\n    fromIndex: number;\r\n    toIndex: number;\r\n  };\r\n}\r\n\r\nexport type ListActions =\r\n  | CreateListAction\r\n  | DeleteListAction\r\n  | ChangeListAction\r\n  | MoveCardAction;\r\n\r\nexport interface ListData {\r\n  id: string;\r\n  title: string;\r\n  cards: string[];\r\n}\r\n\r\nexport interface ListsState {\r\n  [prop: string]: ListData;\r\n}\r\n","import { ThemeActionTypes, ToggleThemeAction } from './types';\r\nconst { TOGGLE_THEME } = ThemeActionTypes;\r\n\r\nexport type ToggleThemeActionCreator = () => ToggleThemeAction;\r\n\r\nexport const toggleTheme: ToggleThemeActionCreator = () => ({\r\n  type: TOGGLE_THEME,\r\n});\r\n","import React, { FC } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState } from 'app/types';\r\nimport { toggleTheme as toggleThemeActionCreator } from 'themes/actions';\r\nimport { Toggle } from 'shared';\r\n\r\nexport interface ThemeToggleProps {\r\n  id?: string;\r\n}\r\n\r\nconst ThemeToggle: FC<ThemeToggleProps> = ({ id }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const currentTheme = useSelector<AppState>(({ theme }) => theme.theme);\r\n  const toggleTheme = () => dispatch(toggleThemeActionCreator());\r\n\r\n  return (\r\n    <Toggle\r\n      containerClassName=\"site-menu__theme-toggle\"\r\n      id={id}\r\n      checked={currentTheme === 'dark'}\r\n      onChange={toggleTheme}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ThemeToggle;\r\n","import React, { FC, useRef } from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport './Options.scss';\r\nimport LanguageSelect from './LanguageSelect';\r\nimport ThemeToggle from './ThemeToggle';\r\n\r\nexport interface OptionsProps {}\r\n\r\nconst Options: FC<OptionsProps> = () => {\r\n  const languageSelectLabelRef = useRef<HTMLLabelElement>(null);\r\n  const intl = useIntl();\r\n\r\n  const languageSelectId = 'language-select';\r\n  const themeToggleId = 'theme-toggle';\r\n\r\n  return (\r\n    <fieldset className=\"site-menu__options-fieldset\">\r\n      <legend className=\"site-menu__options-legend\">\r\n        {intl.formatMessage({\r\n          id: 'app/options',\r\n          defaultMessage: 'Options',\r\n        })}\r\n      </legend>\r\n      <div className=\"site-menu__option\">\r\n        <label\r\n          className=\"site-menu__option-label\"\r\n          htmlFor={languageSelectId}\r\n          ref={languageSelectLabelRef}\r\n        >\r\n          {intl.formatMessage({\r\n            id: 'app/change-language',\r\n            defaultMessage: 'Language',\r\n          })}\r\n          {':'}\r\n        </label>\r\n        <div className=\"site-menu__options-field\">\r\n          <LanguageSelect\r\n            id={languageSelectId}\r\n            labelRef={languageSelectLabelRef}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"site-menu__option\">\r\n        <label className=\"site-menu__option-label\" htmlFor={themeToggleId}>\r\n          {intl.formatMessage({\r\n            id: 'app/change-theme',\r\n            defaultMessage: 'Theme',\r\n          })}\r\n          {':'}\r\n        </label>\r\n        <div className=\"site-menu__options-field\">\r\n          <ThemeToggle id={themeToggleId} />\r\n        </div>\r\n      </div>\r\n    </fieldset>\r\n  );\r\n};\r\n\r\nexport default Options;\r\n","import React, { FC, useRef } from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport { useToggle, useCallbackOnExternalAction } from 'utils';\r\nimport './Menu.scss';\r\nimport Options from './Options';\r\n\r\nconst Menu: FC = () => {\r\n  const intl = useIntl();\r\n  const menuRef = useRef<HTMLDivElement>(null);\r\n  const [expand, toggleExpand] = useToggle(false);\r\n\r\n  useCallbackOnExternalAction(menuRef.current, toggleExpand, expand);\r\n\r\n  return (\r\n    <div className={`site-menu${expand ? '--expand' : ''}`} ref={menuRef}>\r\n      <button onClick={toggleExpand} className=\"site-menu__toggle\">\r\n        {expand\r\n          ? intl.formatMessage({\r\n              id: 'app/close-menu',\r\n              defaultMessage: 'Close',\r\n            })\r\n          : intl.formatMessage({ id: 'app/open-menu', defaultMessage: 'Menu' })}\r\n      </button>\r\n      <div className=\"site-menu__dropdown\">\r\n        <div className=\"site-menu__dropdown-inner\">\r\n          <Options />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React, { FC } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useIntl } from 'react-intl';\r\nimport './Header.scss';\r\nimport Menu from './Menu/Menu';\r\n\r\nconst Header: FC = () => {\r\n  const intl = useIntl();\r\n\r\n  return (\r\n    <header className=\"site-header\">\r\n      <div className=\"site-header__placeholder\" />\r\n      <nav className=\"site-header__navigation\">\r\n        <ul className=\"site-header__navigation-list\">\r\n          <li>\r\n            <NavLink\r\n              className=\"site-header__navigation-link\"\r\n              to=\"/\"\r\n              exact={true}\r\n            >\r\n              {intl.formatMessage({ id: 'app/home', defaultMessage: 'Home' })}\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink className=\"site-header__navigation-link\" to=\"/boards\">\r\n              {intl.formatMessage({\r\n                id: 'app/boards',\r\n                defaultMessage: 'Boards',\r\n              })}\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <Menu />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { FC } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useIntl } from 'react-intl';\r\nimport { AppState } from 'app/types';\r\nimport { ThemeState } from 'themes/types';\r\nimport './PhotoSignature.scss';\r\n\r\nexport interface PhotoSignatureProps {}\r\n\r\nconst PhotoSignature: FC<PhotoSignatureProps> = () => {\r\n  const intl = useIntl();\r\n  const themeData = useSelector<AppState, ThemeState['data']>(\r\n    ({ theme }) => theme.data\r\n  );\r\n\r\n  return (\r\n    <span className=\"photo-signature\">\r\n      {intl.formatMessage({ id: 'app/photo-by', defaultMessage: 'Photo by' })}{' '}\r\n      <a\r\n        className=\"photo-signature__link\"\r\n        href={themeData.bgAuthorLink}\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        {themeData.bgAuthor}\r\n      </a>{' '}\r\n      {intl.formatMessage({\r\n        id: 'app/downloaded-from',\r\n        defaultMessage: 'from',\r\n      })}{' '}\r\n      <a\r\n        className=\"photo-signature__link\"\r\n        href={themeData.bgSourceLink}\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        {themeData.bgSource}\r\n      </a>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default PhotoSignature;\r\n","import React, { FC } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useIntl } from 'react-intl';\r\nimport { Button } from 'shared';\r\nimport './NotFound.scss';\r\n\r\nexport interface NotFoundPageProps {\r\n  message?: string;\r\n}\r\n\r\nconst NotFoundPage: FC<NotFoundPageProps> = ({ message }) => {\r\n  const history = useHistory();\r\n  const intl = useIntl();\r\n\r\n  return (\r\n    <main className=\"not-found-page\">\r\n      <div className=\"not-found-page__message\">\r\n        <span className=\"not-found-page__error-code\">404</span>\r\n        <p>{message}</p>\r\n        <Button onClick={history.goBack}>\r\n          {intl.formatMessage({\r\n            id: 'app/go-back',\r\n            defaultMessage: 'Go back',\r\n          })}\r\n        </Button>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default NotFoundPage;\r\n","import React, { FC } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useIntl } from 'react-intl';\r\nimport { Button } from 'shared';\r\nimport './HomePage.scss';\r\n\r\nconst HomePage: FC = () => {\r\n  const intl = useIntl();\r\n\r\n  return (\r\n    <main className=\"home-page\">\r\n      <h1 className=\"home-page__heading\">Trello clone</h1>\r\n      <Link className=\"home_page__link\" to=\"/boards\" tabIndex={-1}>\r\n        <Button styleType=\"accent\">\r\n          {intl.formatMessage({\r\n            id: 'app/get-started',\r\n            defaultMessage: 'Get started',\r\n          })}\r\n        </Button>\r\n      </Link>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import { ThunkAction } from 'redux-thunk';\r\nimport { AppState } from 'app/types';\r\nimport { ActionCreator } from 'redux';\r\n\r\nexport enum BoardActionTypes {\r\n  CREATE_BOARD = 'CREATE_BOARD',\r\n  DELETE_BOARD = 'DELETE_BOARD',\r\n  CHANGE_BOARD = 'CHANGE_BOARD',\r\n  MOVE_LIST = 'MOVE_LIST',\r\n}\r\nconst {\r\n  CREATE_BOARD,\r\n  CHANGE_BOARD,\r\n  DELETE_BOARD,\r\n  MOVE_LIST,\r\n} = BoardActionTypes;\r\n\r\nexport interface CreateBoardAction {\r\n  type: typeof CREATE_BOARD;\r\n  payload: {\r\n    boardId: string;\r\n    title: string;\r\n  };\r\n}\r\nexport interface DeleteBoardAction {\r\n  type: typeof DELETE_BOARD;\r\n  payload: {\r\n    boardId: string;\r\n    listsIds: string[];\r\n    cardsIds: string[];\r\n  };\r\n}\r\n\r\nexport type DeleteBoardThunk = ActionCreator<\r\n  ThunkAction<DeleteBoardAction, AppState, void, DeleteBoardAction>\r\n>;\r\n\r\nexport interface ChangeBoardAction {\r\n  type: typeof CHANGE_BOARD;\r\n  payload: {\r\n    boardId: string;\r\n    title: string;\r\n  };\r\n}\r\n\r\nexport interface MoveListAction {\r\n  type: typeof MOVE_LIST;\r\n  payload: {\r\n    boardId: string;\r\n    fromIndex: number;\r\n    toIndex: number;\r\n  };\r\n}\r\n\r\nexport type BoardActions =\r\n  | CreateBoardAction\r\n  | DeleteBoardAction\r\n  | ChangeBoardAction\r\n  | MoveListAction;\r\n\r\nexport interface BoardData {\r\n  id: string;\r\n  title: string;\r\n  lists: string[];\r\n}\r\n\r\nexport interface BoardsState {\r\n  byId: {\r\n    [prop: string]: BoardData;\r\n  };\r\n  allIds: string[];\r\n}\r\n","import { v4 } from 'uuid';\r\nimport {\r\n  ListActionTypes,\r\n  CreateListAction,\r\n  ChangeListAction,\r\n  DeleteListThunk,\r\n  MoveCardAction,\r\n} from './types';\r\nconst { CREATE_LIST, DELETE_LIST, CHANGE_LIST, MOVE_CARD } = ListActionTypes;\r\n\r\nexport const createList = (\r\n  boardId: string,\r\n  title: string\r\n): CreateListAction => ({\r\n  type: CREATE_LIST,\r\n  payload: { boardId, listId: v4(), title },\r\n});\r\n\r\nexport const deleteList: DeleteListThunk = (\r\n  boardId: string,\r\n  listId: string\r\n) => (dispatch, getState) => {\r\n  const { lists } = getState();\r\n  const cardsIds = lists[listId].cards;\r\n\r\n  return dispatch({\r\n    type: DELETE_LIST,\r\n    payload: {\r\n      boardId,\r\n      listId,\r\n      cardsIds,\r\n    },\r\n  });\r\n};\r\n\r\nexport const changeList = (\r\n  listId: string,\r\n  title: string\r\n): ChangeListAction => ({\r\n  type: CHANGE_LIST,\r\n  payload: { listId, title },\r\n});\r\n\r\nexport const moveCard = (\r\n  fromListId: string,\r\n  toListId: string,\r\n  fromIndex: number,\r\n  toIndex: number\r\n): MoveCardAction => ({\r\n  type: MOVE_CARD,\r\n  payload: {\r\n    fromListId,\r\n    toListId,\r\n    fromIndex,\r\n    toIndex,\r\n  },\r\n});\r\n","export enum CardActionTypes {\r\n  CREATE_CARD = 'CREATE_CARD',\r\n  DELETE_CARD = 'DELETE_CARD',\r\n  CHANGE_CARD = 'CHANGE_CARD',\r\n}\r\nconst { CREATE_CARD, DELETE_CARD, CHANGE_CARD } = CardActionTypes;\r\n\r\nexport interface CreateCardAction {\r\n  type: typeof CREATE_CARD;\r\n  payload: {\r\n    listId: string;\r\n    cardId: string;\r\n    content: string;\r\n  };\r\n}\r\n\r\nexport interface DeleteCardAction {\r\n  type: typeof DELETE_CARD;\r\n  payload: {\r\n    listId: string;\r\n    cardId: string;\r\n  };\r\n}\r\n\r\nexport interface ChangeCardAction {\r\n  type: typeof CHANGE_CARD;\r\n  payload: {\r\n    cardId: string;\r\n    content: string;\r\n  };\r\n}\r\n\r\nexport type CardActions =\r\n  | CreateCardAction\r\n  | DeleteCardAction\r\n  | ChangeCardAction;\r\n\r\nexport interface CardData {\r\n  id: string;\r\n  content: string;\r\n}\r\n\r\nexport interface CardsState {\r\n  [prop: string]: CardData;\r\n}\r\n","import {\r\n  BoardActionTypes,\r\n  CreateBoardAction,\r\n  ChangeBoardAction,\r\n  DeleteBoardThunk,\r\n  MoveListAction,\r\n} from './types';\r\nimport { v4 } from 'uuid';\r\nconst {\r\n  CREATE_BOARD,\r\n  DELETE_BOARD,\r\n  CHANGE_BOARD,\r\n  MOVE_LIST,\r\n} = BoardActionTypes;\r\n\r\nexport const createBoard = (title: string): CreateBoardAction => ({\r\n  type: CREATE_BOARD,\r\n  payload: {\r\n    boardId: v4(),\r\n    title,\r\n  },\r\n});\r\n\r\nexport const deleteBoard: DeleteBoardThunk = (boardId: string) => (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const { boards, lists } = getState();\r\n  const listsIds = boards.byId[boardId].lists;\r\n  const cardsIds = listsIds.map(id => lists[id].cards).flat();\r\n\r\n  return dispatch({\r\n    type: DELETE_BOARD,\r\n    payload: {\r\n      boardId,\r\n      listsIds,\r\n      cardsIds,\r\n    },\r\n  });\r\n};\r\n\r\nexport const changeBoard = (\r\n  boardId: string,\r\n  title: string\r\n): ChangeBoardAction => ({\r\n  type: CHANGE_BOARD,\r\n  payload: { boardId, title },\r\n});\r\n\r\nexport const moveList = (\r\n  boardId: string,\r\n  fromIndex: number,\r\n  toIndex: number\r\n): MoveListAction => ({\r\n  type: MOVE_LIST,\r\n  payload: {\r\n    boardId,\r\n    fromIndex,\r\n    toIndex,\r\n  },\r\n});\r\n","import { v4 } from 'uuid';\r\nimport {\r\n  CardActionTypes,\r\n  CreateCardAction,\r\n  DeleteCardAction,\r\n  ChangeCardAction,\r\n} from './types';\r\nconst { CREATE_CARD, DELETE_CARD, CHANGE_CARD } = CardActionTypes;\r\n\r\nexport const createCard = (\r\n  listId: string,\r\n  content: string\r\n): CreateCardAction => ({\r\n  type: CREATE_CARD,\r\n  payload: { listId, cardId: v4(), content },\r\n});\r\n\r\nexport const deleteCard = (\r\n  listId: string,\r\n  cardId: string\r\n): DeleteCardAction => ({\r\n  type: DELETE_CARD,\r\n  payload: { listId, cardId },\r\n});\r\n\r\nexport const changeCard = (\r\n  cardId: string,\r\n  content: string\r\n): ChangeCardAction => ({\r\n  type: CHANGE_CARD,\r\n  payload: { cardId, content },\r\n});\r\n","import React, { FC, ReactElement, memo } from 'react';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport { createPortal } from 'react-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { useIntl } from 'react-intl';\r\nimport { useToggle } from 'utils';\r\nimport { AppState } from 'app/types';\r\nimport { FieldEditor } from 'shared';\r\nimport './Card.scss';\r\n\r\nexport interface CardProps {\r\n  index: number;\r\n  id: string;\r\n  onDelete: (id: string) => any;\r\n  onEdit: (id: string, newContent: string) => any;\r\n}\r\n\r\nconst optionalPortal = (style: any, element: ReactElement): ReactElement => {\r\n  if (style.position !== 'fixed') return element;\r\n  return createPortal(element, document.getElementById('draggable')!);\r\n};\r\n\r\nconst Card: FC<CardProps> = ({ index, id, onDelete, onEdit }) => {\r\n  const intl = useIntl();\r\n\r\n  const content = useSelector<AppState, string>(\r\n    ({ cards }) => cards[id].content\r\n  );\r\n\r\n  const handleDelete = () => onDelete(id);\r\n  const handleSubmit = (newContent: string) => onEdit(id, newContent);\r\n\r\n  // Caret insert in edit mode won't work if disableInteractiveElementBlocking\r\n  // will be enabled\r\n  const [shouldDrag, toggleShouldDrag] = useToggle(true);\r\n\r\n  return (\r\n    <Draggable\r\n      draggableId={id}\r\n      index={index}\r\n      disableInteractiveElementBlocking={shouldDrag}\r\n    >\r\n      {provided =>\r\n        optionalPortal(\r\n          provided.draggableProps.style,\r\n          <div\r\n            className=\"cards__card\"\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            ref={provided.innerRef}\r\n          >\r\n            <FieldEditor\r\n              fieldName={intl.formatMessage({\r\n                id: 'cards/content',\r\n                defaultMessage: 'Content',\r\n              })}\r\n              value={content}\r\n              onSubmit={handleSubmit}\r\n              onDelete={handleDelete}\r\n              onEditToggle={toggleShouldDrag}\r\n              textareaClassName=\"cards__card-textarea\"\r\n            />\r\n          </div>\r\n        )\r\n      }\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default memo(Card);\r\n","import React, { FC, memo } from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport { FieldEditor } from 'shared';\r\nimport './NewCard.scss';\r\n\r\nexport interface NewCardProps {\r\n  onCreate: (content: string) => any;\r\n  toggleListDrag: () => void;\r\n}\r\n\r\nconst NewCard: FC<NewCardProps> = ({ onCreate, toggleListDrag }) => {\r\n  const intl = useIntl();\r\n\r\n  return (\r\n    <div className=\"cards__new-card\">\r\n      <FieldEditor\r\n        fieldName={intl.formatMessage({\r\n          id: 'cards/content',\r\n          defaultMessage: 'Content',\r\n        })}\r\n        displayOnViewMode={intl.formatMessage({\r\n          id: 'cards/new-card',\r\n          defaultMessage: 'New card',\r\n        })}\r\n        titles={{\r\n          edit: intl.formatMessage({\r\n            id: 'create',\r\n            defaultMessage: 'Create',\r\n          }),\r\n        }}\r\n        exitOnSubmit={false}\r\n        onSubmit={onCreate}\r\n        onEditToggle={toggleListDrag}\r\n        textareaClassName=\"cards__card-textarea\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(NewCard);\r\n","import React, { FC, useCallback, memo } from 'react';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState } from 'app/types';\r\nimport { createCard, deleteCard, changeCard } from '../actions';\r\nimport './ListOfCards.scss';\r\nimport Card from './Card';\r\nimport NewCard from './NewCard';\r\n\r\nexport interface ListOfCardsProps {\r\n  listId: string;\r\n  toggleListDrag: () => void;\r\n}\r\n\r\nconst ListOfCards: FC<ListOfCardsProps> = ({ listId, toggleListDrag }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const cardsIds = useSelector<AppState, string[]>(\r\n    ({ lists }) => lists[listId]?.cards || []\r\n  );\r\n\r\n  const onCreate = useCallback(\r\n    (content: string) => dispatch(createCard(listId, content)),\r\n    [dispatch, listId]\r\n  );\r\n\r\n  const onDelete = useCallback(\r\n    (cardId: string) => dispatch(deleteCard(listId, cardId)),\r\n    [dispatch, listId]\r\n  );\r\n\r\n  const onEdit = useCallback(\r\n    (cardId: string, content: string) => dispatch(changeCard(cardId, content)),\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Droppable droppableId={listId} type=\"card\">\r\n        {provided => (\r\n          <ul\r\n            {...provided.droppableProps}\r\n            ref={provided.innerRef}\r\n            className=\"cards\"\r\n          >\r\n            {cardsIds.map((id, index) => (\r\n              <li key={id}>\r\n                <Card\r\n                  index={index}\r\n                  id={id}\r\n                  onDelete={onDelete}\r\n                  onEdit={onEdit}\r\n                />\r\n              </li>\r\n            ))}\r\n            {provided.placeholder}\r\n          </ul>\r\n        )}\r\n      </Droppable>\r\n      <NewCard onCreate={onCreate} toggleListDrag={toggleListDrag} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(ListOfCards);\r\n","import React, { FC, memo } from 'react';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport { useSelector } from 'react-redux';\r\nimport { useIntl } from 'react-intl';\r\nimport { useToggle } from 'utils';\r\nimport { AppState } from 'app/types';\r\nimport { FieldEditor } from 'shared';\r\nimport ListOfCard from 'cards';\r\n\r\nimport './List.scss';\r\n\r\nexport interface ListProps {\r\n  index: number;\r\n  id: string;\r\n  onEdit: (listId: string, newTitle: string) => any;\r\n  onDelete: (listId: string) => any;\r\n}\r\n\r\nconst List: FC<ListProps> = ({ index, id, onEdit, onDelete }) => {\r\n  const intl = useIntl();\r\n\r\n  const title = useSelector<AppState, string>(({ lists }) => lists[id].title);\r\n\r\n  const handleDelete = () => onDelete(id);\r\n  const handleSubmit = (newTitle: string) => onEdit(id, newTitle);\r\n\r\n  // Caret insert in edit mode won't work if disableInteractiveElementBlocking\r\n  // will be enabled\r\n  const [shouldDrag, toggleShouldDrag] = useToggle(true);\r\n\r\n  return (\r\n    <Draggable\r\n      draggableId={id}\r\n      index={index}\r\n      disableInteractiveElementBlocking={shouldDrag}\r\n    >\r\n      {provided => (\r\n        <div\r\n          className=\"lists__list\"\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          ref={provided.innerRef}\r\n        >\r\n          <header className=\"lists__list-header\">\r\n            <FieldEditor\r\n              fieldName={intl.formatMessage({\r\n                id: 'lists/title',\r\n                defaultMessage: 'Title',\r\n              })}\r\n              value={title}\r\n              onDelete={handleDelete}\r\n              onSubmit={handleSubmit}\r\n              onEditToggle={toggleShouldDrag}\r\n              textareaClassName=\"lists__list-textarea\"\r\n            />\r\n          </header>\r\n          <ListOfCard listId={id} toggleListDrag={toggleShouldDrag} />\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default memo(List);\r\n","import React, { FC, memo } from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport { FieldEditor } from 'shared';\r\nimport './NewList.scss';\r\n\r\nexport interface NewListProps {\r\n  onCreate: (title: string) => any;\r\n}\r\n\r\nconst NewList: FC<NewListProps> = ({ onCreate }) => {\r\n  const intl = useIntl();\r\n\r\n  return (\r\n    <div className=\"lists__new-list\">\r\n      <FieldEditor\r\n        fieldName={intl.formatMessage({\r\n          id: 'lists/title',\r\n          defaultMessage: 'Title',\r\n        })}\r\n        displayOnViewMode={intl.formatMessage({\r\n          id: 'lists/new-list',\r\n          defaultMessage: 'Create card',\r\n        })}\r\n        titles={{\r\n          edit: intl.formatMessage({ id: 'create', defaultMessage: 'Create' }),\r\n        }}\r\n        exitOnSubmit={false}\r\n        onSubmit={onCreate}\r\n        textareaClassName=\"lists__list-textarea\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(NewList);\r\n","import React, { FC, memo, useCallback } from 'react';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\nimport { DragDropContext, DropResult } from 'react-beautiful-dnd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState } from 'app/types';\r\nimport { createList, deleteList, changeList, moveCard } from '../actions';\r\nimport { moveList } from 'boards/actions';\r\nimport List from './List';\r\nimport NewList from './NewList';\r\nimport './ListOfLists.scss';\r\n\r\nexport interface ListOfListsProps {\r\n  boardId: string;\r\n}\r\n\r\nconst ListOfLists: FC<ListOfListsProps> = ({ boardId }) => {\r\n  const lists = useSelector<AppState, string[]>(\r\n    ({ boards }) => boards.byId[boardId]?.lists || []\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onCreate = useCallback(\r\n    (title: string) => dispatch(createList(boardId, title)),\r\n    [dispatch, boardId]\r\n  );\r\n\r\n  const onDelete = useCallback(\r\n    (listId: string) => dispatch(deleteList(boardId, listId)),\r\n    [boardId, dispatch]\r\n  );\r\n\r\n  const onEdit = useCallback(\r\n    (listId: string, title: string) => dispatch(changeList(listId, title)),\r\n    [dispatch]\r\n  );\r\n\r\n  const onListMove = useCallback(\r\n    (fromIndex: number, toIndex: number) =>\r\n      dispatch(moveList(boardId, fromIndex, toIndex)),\r\n    [dispatch, boardId]\r\n  );\r\n\r\n  const onCardMove = useCallback(\r\n    (\r\n      fromListId: string,\r\n      toListId: string,\r\n      fromIndex: number,\r\n      toIndex: number\r\n    ) => dispatch(moveCard(fromListId, toListId, fromIndex, toIndex)),\r\n    [dispatch]\r\n  );\r\n\r\n  const onDragEnd = (result: DropResult) => {\r\n    const { destination, source, type } = result;\r\n\r\n    if (!destination) return;\r\n\r\n    if (type === 'card') {\r\n      const { droppableId: fromListId, index: fromIndex } = source;\r\n      const { droppableId: toListId, index: toIndex } = destination;\r\n\r\n      if (fromListId === toListId && fromIndex === toIndex) {\r\n        return;\r\n      }\r\n\r\n      onCardMove(fromListId, toListId, fromIndex, toIndex);\r\n    } else if (type === 'list') {\r\n      if (source.index === destination.index) return;\r\n\r\n      onListMove(source.index, destination.index);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n      <div className=\"lists\">\r\n        <Droppable droppableId=\"lists\" direction=\"horizontal\" type=\"list\">\r\n          {provided => (\r\n            <ul\r\n              {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n              className=\"lists__ul\"\r\n            >\r\n              {lists.map((id, index) => (\r\n                <li key={id} className=\"lists__ul-item\">\r\n                  <List\r\n                    index={index}\r\n                    id={id}\r\n                    onEdit={onEdit}\r\n                    onDelete={onDelete}\r\n                  />\r\n                </li>\r\n              ))}\r\n              {provided.placeholder}\r\n            </ul>\r\n          )}\r\n        </Droppable>\r\n        <NewList onCreate={onCreate} />\r\n      </div>\r\n    </DragDropContext>\r\n  );\r\n};\r\n\r\nexport default memo(ListOfLists);\r\n","import React, { FC, WheelEvent } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { useIntl } from 'react-intl';\r\nimport { HORIZONTAL_SCROLLING_SPEED_FACTOR } from 'utils';\r\nimport { AppState } from 'app/types';\r\nimport './BoardPage.scss';\r\nimport ListOfLists from 'lists';\r\nimport NotFoundPage from 'app/views/NotFoundPage/NotFoundPage';\r\n\r\nexport interface BoardPageProps extends RouteComponentProps<{ id: string }> {}\r\n\r\nconst BoardPage: FC<BoardPageProps> = ({ match }) => {\r\n  const intl = useIntl();\r\n\r\n  const boardId = match.params.id;\r\n  const boardExist = useSelector<AppState, boolean>(\r\n    state => !!state.boards.byId[boardId]\r\n  );\r\n\r\n  if (boardExist) {\r\n    const onWheel = ({\r\n      target,\r\n      currentTarget,\r\n      deltaY,\r\n    }: WheelEvent<HTMLDivElement>) => {\r\n      if (window.innerHeight <= 600) return;\r\n      if ((target as HTMLElement)?.closest('.lists__list')) return;\r\n      currentTarget.scrollTo({\r\n        left:\r\n          currentTarget.scrollLeft + deltaY * HORIZONTAL_SCROLLING_SPEED_FACTOR,\r\n      });\r\n    };\r\n\r\n    return (\r\n      <main className=\"board-page\" onWheel={onWheel}>\r\n        <ListOfLists boardId={boardId} />\r\n      </main>\r\n    );\r\n  } else\r\n    return (\r\n      <NotFoundPage\r\n        message={intl.formatMessage({\r\n          id: 'app/board404',\r\n          defaultMessage: \"Such board doesn't exist\",\r\n        })}\r\n      />\r\n    );\r\n};\r\n\r\nexport default BoardPage;\r\n","import React, { FC, memo } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { useIntl } from 'react-intl';\r\nimport { preventDefault, useToggle } from 'utils';\r\nimport { AppState } from 'app/types';\r\nimport { FieldEditor } from 'shared';\r\nimport './BoardLink.scss';\r\n\r\nexport interface BoardLinkProps {\r\n  id: string;\r\n  onEdit: (id: string, newTitle: string) => any;\r\n  onDelete: (id: string) => any;\r\n}\r\n\r\nconst BoardLink: FC<BoardLinkProps> = ({ id, onEdit, onDelete }) => {\r\n  const intl = useIntl();\r\n\r\n  const title = useSelector<AppState, string>(\r\n    ({ boards }) => boards.byId[id].title\r\n  );\r\n\r\n  const [editMode, toggleEditMode] = useToggle(false);\r\n\r\n  const handleSubmit = (newTitle: string) => onEdit(id, newTitle);\r\n  const handleDelete = () => onDelete(id);\r\n\r\n  return (\r\n    <NavLink\r\n      to={`/boards/${id}`}\r\n      className=\"boards-navigation__link\"\r\n      onClick={editMode ? preventDefault : undefined}\r\n    >\r\n      <FieldEditor\r\n        fieldName={intl.formatMessage({\r\n          id: 'boards/title',\r\n          defaultMessage: 'Title',\r\n        })}\r\n        value={title}\r\n        iconToggle={true}\r\n        onEditToggle={toggleEditMode}\r\n        onSubmit={handleSubmit}\r\n        onDelete={handleDelete}\r\n        textareaClassName=\"boards-navigation__link-textarea\"\r\n      />\r\n    </NavLink>\r\n  );\r\n};\r\n\r\nexport default memo(BoardLink);\r\n","import React, { FC, memo } from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport { FieldEditor } from 'shared';\r\nimport './NewBoard.scss';\r\n\r\nexport interface NewBoardProps {\r\n  onCreate: (title: string) => any;\r\n}\r\n\r\nconst NewBoard: FC<NewBoardProps> = ({ onCreate }) => {\r\n  const intl = useIntl();\r\n\r\n  return (\r\n    <div className=\"boards-navigation__new-board\">\r\n      <FieldEditor\r\n        fieldName={intl.formatMessage({\r\n          id: 'boards/title',\r\n          defaultMessage: 'Title',\r\n        })}\r\n        displayOnViewMode={intl.formatMessage({\r\n          id: 'boards/new-board',\r\n          defaultMessage: 'Create board',\r\n        })}\r\n        titles={{\r\n          edit: intl.formatMessage({\r\n            id: 'create',\r\n            defaultMessage: 'Create',\r\n          }),\r\n        }}\r\n        exitOnSubmit={false}\r\n        onSubmit={onCreate}\r\n        textareaClassName=\"boards-navigation__link-textarea\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(NewBoard);\r\n","import React, { FC, WheelEvent, useCallback } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { HORIZONTAL_SCROLLING_SPEED_FACTOR } from 'utils';\r\nimport { AppState } from 'app/types';\r\nimport { createBoard, deleteBoard, changeBoard } from '../actions';\r\nimport BoardLink from './BoardLink';\r\nimport NewBoard from './NewBoard';\r\nimport './BoardsNavigation.scss';\r\n\r\nconst BoardsNavigation: FC = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const boardsIds = useSelector<AppState, string[]>(\r\n    ({ boards }) => boards.allIds\r\n  );\r\n\r\n  const onCreate = useCallback(\r\n    (title: string) => dispatch(createBoard(title)),\r\n    [dispatch]\r\n  );\r\n\r\n  const onDelete = useCallback(\r\n    (boardId: string) => {\r\n      if (history.location.pathname.includes(boardId)) history.push('/boards/');\r\n      dispatch(deleteBoard(boardId));\r\n    },\r\n    [dispatch, history]\r\n  );\r\n\r\n  const onEdit = useCallback(\r\n    (boardId: string, newTitle: string) => {\r\n      dispatch(changeBoard(boardId, newTitle));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const onWheel = ({\r\n    target,\r\n    currentTarget,\r\n    deltaY,\r\n  }: WheelEvent<HTMLDivElement>) => {\r\n    if ((target as HTMLElement)?.closest('.field-editor--edit')) return;\r\n    currentTarget.scrollTo({\r\n      left:\r\n        currentTarget.scrollLeft + deltaY * HORIZONTAL_SCROLLING_SPEED_FACTOR,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <nav className=\"boards-navigation\" onWheel={onWheel}>\r\n      <ul className=\"boards-navigation__list\">\r\n        {boardsIds.map(id => (\r\n          <li key={id}>\r\n            <BoardLink id={id} onDelete={onDelete} onEdit={onEdit} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <NewBoard onCreate={onCreate} />\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default BoardsNavigation;\r\n","import React, { FC } from 'react';\nimport { IntlProvider, useIntl } from 'react-intl';\nimport { Switch, Route } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport 'normalize.css';\nimport './App.scss';\nimport { AppState } from './types';\nimport translations from 'localization/data';\nimport Header from './Header/Header';\nimport PhotoSignature from './PhotoSignature/PhotoSignature';\nimport NotFoundPage from './views/NotFoundPage/NotFoundPage';\nimport HomePage from './views/HomePage/HomePage';\nimport BoardPage from './views/BoardPage/BoardPage';\nimport BoardsNavigation from 'boards';\n\nconst App: FC = () => {\n  const locale = useSelector<AppState, string>(\n    ({ locale }) => locale.languageCode\n  );\n  const theme = useSelector<AppState, string>(({ theme }) => theme.theme);\n\n  return (\n    <IntlProvider locale={locale} messages={translations[locale].translation}>\n      <div id=\"theme\" className={`_theme--${theme}`}>\n        <Header />\n        <Switch>\n          <Route path=\"/\" exact={true} component={HomePage} />\n          <Route\n            path=\"/boards\"\n            render={() => (\n              <>\n                <BoardsNavigation />\n                <Route path=\"/boards/:id\" component={BoardPage} />\n              </>\n            )}\n          />\n          <Route path=\"*\" component={PageNotFound} />\n        </Switch>\n        <PhotoSignature />\n      </div>\n    </IntlProvider>\n  );\n};\n\nconst PageNotFound: FC = () => {\n  const intl = useIntl();\n\n  return (\n    <NotFoundPage\n      message={intl.formatMessage({\n        id: 'app/page404',\n        defaultMessage: \"Such page doesn't exist\",\n      })}\n    />\n  );\n};\n\nexport default App;\n","import throttle from 'lodash/throttle';\r\nimport store from './store';\r\n\r\nexport const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem('state');\r\n    if (!serializedState) return;\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return;\r\n  }\r\n};\r\n\r\nexport const saveState = () => {\r\n  try {\r\n    const serializedState = JSON.stringify(store.getState());\r\n    localStorage.setItem('state', serializedState);\r\n  } catch (err) {\r\n    return;\r\n  }\r\n};\r\n\r\nexport const watchState = throttle(() => {\r\n  store.subscribe(saveState);\r\n}, 1000);\r\n","import { Reducer } from 'redux';\r\nimport {\r\n  LocaleActionTypes,\r\n  LocaleState,\r\n  LocaleActions,\r\n  SetLanguageAction,\r\n} from './types';\r\nimport translations from './data';\r\n\r\nconst { SET_LANGUAGE } = LocaleActionTypes;\r\n\r\nconst preferredLanguage = navigator.language?.slice(0, 2);\r\nlet language: string = 'en';\r\nif (preferredLanguage in translations) language = preferredLanguage;\r\n\r\nconst initialState: LocaleState = {\r\n  languageCode: language,\r\n  languageName: translations[language].name,\r\n};\r\n\r\nconst localeReducer: Reducer<LocaleState, LocaleActions> = (\r\n  state = initialState,\r\n  { type, payload }\r\n) => {\r\n  switch (type) {\r\n    case SET_LANGUAGE: {\r\n      return {\r\n        ...state,\r\n        ...(payload as SetLanguageAction['payload']),\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default localeReducer;\r\n","import themesData from './themesData.json';\r\nimport { Reducer } from 'redux';\r\nimport { ThemeActionTypes, ThemeActions, ThemeState } from './types';\r\n\r\nconst { TOGGLE_THEME } = ThemeActionTypes;\r\n\r\nconst initialState: ThemeState = {\r\n  theme: 'light',\r\n  data: themesData.light,\r\n};\r\n\r\nconst themeReducer: Reducer<ThemeState, ThemeActions> = (\r\n  state = initialState,\r\n  { type }\r\n) => {\r\n  switch (type) {\r\n    case TOGGLE_THEME: {\r\n      const newTheme = state.theme === 'light' ? 'dark' : 'light';\r\n      return {\r\n        ...state,\r\n        theme: newTheme,\r\n        data: themesData[newTheme],\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default themeReducer;\r\n","import {\r\n  BoardActionTypes,\r\n  BoardsState,\r\n  BoardActions,\r\n  CreateBoardAction,\r\n  DeleteBoardAction,\r\n  ChangeBoardAction,\r\n  MoveListAction,\r\n} from './types';\r\nimport { Reducer } from 'react';\r\nimport {\r\n  ListActionTypes,\r\n  CreateListAction,\r\n  DeleteListAction,\r\n} from 'lists/types';\r\nconst {\r\n  CREATE_BOARD,\r\n  DELETE_BOARD,\r\n  CHANGE_BOARD,\r\n  MOVE_LIST,\r\n} = BoardActionTypes;\r\nconst { CREATE_LIST, DELETE_LIST } = ListActionTypes;\r\n\r\nconst initialState: BoardsState = {\r\n  byId: {},\r\n  allIds: [],\r\n};\r\n\r\nconst boardReducer: Reducer<\r\n  BoardsState,\r\n  BoardActions | CreateListAction | DeleteListAction\r\n> = (state = initialState, { type, payload }): BoardsState => {\r\n  switch (type) {\r\n    case CREATE_BOARD: {\r\n      const { boardId, title } = payload as CreateBoardAction['payload'];\r\n\r\n      const byId = {\r\n        ...state.byId,\r\n        [boardId]: { id: boardId, title, lists: [] },\r\n      };\r\n\r\n      return {\r\n        ...state,\r\n        byId,\r\n        allIds: [...state.allIds, boardId],\r\n      };\r\n    }\r\n\r\n    case DELETE_BOARD: {\r\n      const { boardId } = payload as DeleteBoardAction['payload'];\r\n\r\n      const { [boardId]: ignore, ...byId } = state.byId;\r\n      const allIds = state.allIds.filter(id => id !== boardId);\r\n\r\n      return {\r\n        ...state,\r\n        byId,\r\n        allIds,\r\n      };\r\n    }\r\n\r\n    case CHANGE_BOARD: {\r\n      const { boardId, title } = payload as ChangeBoardAction['payload'];\r\n\r\n      const byId = {\r\n        ...state.byId,\r\n        [boardId]: { ...state.byId[boardId], title },\r\n      };\r\n\r\n      return {\r\n        ...state,\r\n        byId,\r\n      };\r\n    }\r\n\r\n    case MOVE_LIST: {\r\n      const {\r\n        boardId,\r\n        fromIndex,\r\n        toIndex,\r\n      } = payload as MoveListAction['payload'];\r\n\r\n      const byId = { ...state.byId };\r\n      const board = { ...byId[boardId] };\r\n      const lists = [...board.lists];\r\n\r\n      const list = lists.splice(fromIndex, 1);\r\n      lists.splice(toIndex, 0, ...list);\r\n\r\n      board.lists = lists;\r\n      byId[boardId] = board;\r\n\r\n      return {\r\n        ...state,\r\n        byId,\r\n      };\r\n    }\r\n\r\n    case CREATE_LIST: {\r\n      const { boardId, listId } = payload as CreateListAction['payload'];\r\n\r\n      const board = {\r\n        ...state.byId[boardId],\r\n      };\r\n      board.lists = [...board.lists, listId];\r\n\r\n      const byId = {\r\n        ...state.byId,\r\n        [boardId]: board,\r\n      };\r\n\r\n      return {\r\n        ...state,\r\n        byId,\r\n      };\r\n    }\r\n\r\n    case DELETE_LIST: {\r\n      const {\r\n        boardId,\r\n        listId: targetListId,\r\n      } = payload as DeleteListAction['payload'];\r\n\r\n      const board = {\r\n        ...state.byId[boardId],\r\n      };\r\n\r\n      board.lists = board.lists.filter(listId => listId !== targetListId);\r\n\r\n      const byId = {\r\n        ...state.byId,\r\n        [boardId]: board,\r\n      };\r\n\r\n      return {\r\n        ...state,\r\n        byId,\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default boardReducer;\r\n","import {\r\n  ListActionTypes,\r\n  ListsState,\r\n  ListActions,\r\n  CreateListAction,\r\n  DeleteListAction,\r\n  ChangeListAction,\r\n  MoveCardAction,\r\n} from './types';\r\nimport { Reducer } from 'react';\r\nimport { BoardActionTypes, DeleteBoardAction } from 'boards/types';\r\nimport {\r\n  CardActionTypes,\r\n  CreateCardAction,\r\n  DeleteCardAction,\r\n} from 'cards/types';\r\nconst { CREATE_LIST, DELETE_LIST, CHANGE_LIST, MOVE_CARD } = ListActionTypes;\r\nconst { CREATE_CARD, DELETE_CARD } = CardActionTypes;\r\nconst { DELETE_BOARD } = BoardActionTypes;\r\n\r\nconst initialState: ListsState = {};\r\n\r\nconst listReducer: Reducer<\r\n  ListsState,\r\n  ListActions | CreateCardAction | DeleteCardAction | DeleteBoardAction\r\n> = (state = initialState, { type, payload }): ListsState => {\r\n  switch (type) {\r\n    case CREATE_LIST: {\r\n      const { listId, title } = payload as CreateListAction['payload'];\r\n\r\n      return {\r\n        ...state,\r\n        [listId]: { id: listId, title, cards: [] },\r\n      };\r\n    }\r\n\r\n    case DELETE_LIST: {\r\n      const { listId } = payload as DeleteListAction['payload'];\r\n\r\n      const { [listId]: ignore, ...rest } = state;\r\n\r\n      return {\r\n        ...rest,\r\n      };\r\n    }\r\n\r\n    case CHANGE_LIST: {\r\n      const { listId, title } = payload as ChangeListAction['payload'];\r\n\r\n      return {\r\n        ...state,\r\n        [listId]: { ...state[listId], title },\r\n      };\r\n    }\r\n\r\n    case CREATE_CARD: {\r\n      const { listId, cardId } = payload as CreateCardAction['payload'];\r\n\r\n      const list = { ...state[listId] };\r\n      list.cards = [...list.cards, cardId];\r\n\r\n      return {\r\n        ...state,\r\n        [listId]: list,\r\n      };\r\n    }\r\n\r\n    case DELETE_CARD: {\r\n      const { listId, cardId } = payload as DeleteCardAction['payload'];\r\n\r\n      const list = { ...state[listId] };\r\n      list.cards = list.cards.filter(id => id !== cardId);\r\n\r\n      return {\r\n        ...state,\r\n        [listId]: list,\r\n      };\r\n    }\r\n\r\n    case MOVE_CARD: {\r\n      const {\r\n        fromListId,\r\n        toListId,\r\n        fromIndex,\r\n        toIndex,\r\n      } = payload as MoveCardAction['payload'];\r\n\r\n      const newState = { ...state };\r\n\r\n      const fromList = { ...newState[fromListId] };\r\n      fromList.cards = [...fromList.cards];\r\n      const card = fromList.cards.splice(fromIndex, 1);\r\n      newState[fromListId] = fromList;\r\n\r\n      const toList = { ...newState[toListId] };\r\n      toList.cards = [...toList.cards];\r\n      toList.cards.splice(toIndex, 0, ...card);\r\n      newState[toListId] = toList;\r\n\r\n      return newState;\r\n    }\r\n\r\n    case DELETE_BOARD: {\r\n      const { listsIds } = payload as DeleteBoardAction['payload'];\r\n\r\n      const newState: ListsState = {};\r\n      for (const prop in state) {\r\n        if (state.hasOwnProperty(prop) && !listsIds.includes(prop)) {\r\n          newState[prop] = state[prop];\r\n        }\r\n      }\r\n\r\n      return newState;\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default listReducer;\r\n","import { Reducer } from 'redux';\r\nimport {\r\n  CardActionTypes,\r\n  CardsState,\r\n  CardActions,\r\n  CreateCardAction,\r\n  DeleteCardAction,\r\n  ChangeCardAction,\r\n} from './types';\r\nimport { ListActionTypes, DeleteListAction } from 'lists/types';\r\nimport { BoardActionTypes, DeleteBoardAction } from 'boards/types';\r\nconst { CREATE_CARD, DELETE_CARD, CHANGE_CARD } = CardActionTypes;\r\nconst { DELETE_LIST } = ListActionTypes;\r\nconst { DELETE_BOARD } = BoardActionTypes;\r\n\r\nconst initialState: CardsState = {};\r\n\r\nconst listReducer: Reducer<\r\n  CardsState,\r\n  CardActions | DeleteListAction | DeleteBoardAction\r\n> = (state = initialState, { type, payload }): CardsState => {\r\n  switch (type) {\r\n    case CREATE_CARD: {\r\n      const { cardId, content } = payload as CreateCardAction['payload'];\r\n\r\n      return {\r\n        ...state,\r\n        [cardId]: { id: cardId, content },\r\n      };\r\n    }\r\n\r\n    case DELETE_CARD: {\r\n      const { cardId } = payload as DeleteCardAction['payload'];\r\n\r\n      const { [cardId]: ignore, ...rest } = state;\r\n\r\n      return {\r\n        ...rest,\r\n      };\r\n    }\r\n\r\n    case CHANGE_CARD: {\r\n      const { cardId, content } = payload as ChangeCardAction['payload'];\r\n\r\n      return {\r\n        ...state,\r\n        [cardId]: { ...state[cardId], content },\r\n      };\r\n    }\r\n\r\n    case DELETE_LIST: {\r\n      const { cardsIds } = payload as DeleteListAction['payload'];\r\n\r\n      const newState: CardsState = {};\r\n      for (const id in state) {\r\n        if (state.hasOwnProperty(id) && !cardsIds.includes(id)) {\r\n          newState[id] = state[id];\r\n        }\r\n      }\r\n\r\n      return newState;\r\n    }\r\n\r\n    case DELETE_BOARD: {\r\n      const { cardsIds } = payload as DeleteBoardAction['payload'];\r\n\r\n      const newState: CardsState = {};\r\n      for (const id in state) {\r\n        if (state.hasOwnProperty(id) && !cardsIds.includes(id)) {\r\n          newState[id] = state[id];\r\n        }\r\n      }\r\n\r\n      return newState;\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default listReducer;\r\n","import { combineReducers } from 'redux';\r\nimport localeReducer from 'localization/reducer';\r\nimport themeReducer from 'themes/reducer';\r\nimport boardReducer from 'boards/reducer';\r\nimport listReducer from 'lists/reducer';\r\nimport cardReducer from 'cards/reducer';\r\n\r\nexport default combineReducers({\r\n  locale: localeReducer,\r\n  theme: themeReducer,\r\n  boards: boardReducer,\r\n  lists: listReducer,\r\n  cards: cardReducer,\r\n});\r\n","import { Store, createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport ReduxThunk from 'redux-thunk';\r\nimport { AppState, AllActions } from './types';\r\nimport { loadState } from './localStorage';\r\nimport rootReducer from './rootReducer';\r\n\r\nconst middleware = [ReduxThunk];\r\n\r\nconst store: Store<AppState, AllActions> = createStore(\r\n  rootReducer,\r\n  loadState(),\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport App from 'app/App';\nimport store from 'app/store';\nimport { watchState } from 'app/localStorage';\n\nwatchState();\n\nReactDOM.render(\n  <StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </StrictMode>,\n  document.getElementById('app')\n);\n"],"sourceRoot":""}